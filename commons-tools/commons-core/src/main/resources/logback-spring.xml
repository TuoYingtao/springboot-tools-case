<?xml version="1.0" encoding="UTF-8"?>
<!-- 官方文档：https://logback.qos.ch/manual/layouts.html -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 自定义转换器 -->
    <conversionRule conversionWord="ipd" converterClass="com.compound.commons.core.components.logging.ProcessIdClassicConverter" />
    <conversionRule conversionWord="myHighlight" converterClass="com.compound.commons.core.components.logging.EasyHighlightingCompositeConverter" />
    <contextName>MyLogback</contextName>

    <!-- 日志存放路径 -->
    <property name="log.path" value="logs/compound-main" />
    <!-- 日志输出格式：信息跳转 %cyan(at %class.%method) : \\(%file:%line\\) -->
    <property name="log.filePattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName %-5level %ipd -- [%15.15thread] %-42.42logger{42} : [%method:%line] %msg%n%xThrowable" />
    <property name="log.pattern" value="%white(%d{yyyy-MM-dd HH:mm:ss.SSS}) %black(%contextName) %myHighlight(%-5level) %gray(%ipd) -- %boldMagenta([%15.15thread]) %cyan(%-42.42logger{42}) : %blue([%method:%line]) %msg%n%xThrowable" />

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- 系统日志输出 -->
    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/info.log</file>
        <!--是否追加到文件末尾,默认为true-->
        <append>true</append>
        <!-- 日志保存策略：基于时间、文件大小切分创建日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <!-- 这是活动文件的大小，默认值是10MB，测试时可改成5KB看效果 -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 用来指定日志文件的上限大小，但最大到500MB，每个日志文件到10MB的时候开始切分，最多保留60天，哪怕没到60天也要删除多余的日志 -->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${log.filePattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/error.log</file>
        <!--是否追加到文件末尾,默认为true-->
        <append>true</append>
        <!-- 日志保存策略：基于时间、文件大小切分创建日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <!-- 这是活动文件的大小，默认值是10MB，测试时可改成5KB看效果 -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 用来指定日志文件的上限大小，但最大到500MB，每个日志文件到10MB的时候开始切分，最多保留60天，哪怕没到60天也要删除多余的日志 -->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${log.filePattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="file_warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/warn.log</file>
        <!--是否追加到文件末尾,默认为true-->
        <append>true</append>
        <!-- 日志保存策略：基于时间切分创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <!-- 用来指定日志文件的上限大小，但最大到500MB，最多保留60天，哪怕没到60天也要删除多余的日志 -->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${log.filePattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>WARN</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="file_debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/debug.log</file>
        <!--是否追加到文件末尾,默认为true-->
        <append>true</append>
        <!-- 日志保存策略：基于时间切分创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/debug.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <!-- 用来指定日志文件的上限大小，但最大到500MB，最多保留60天，哪怕没到60天也要删除多余的日志 -->
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${log.filePattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>DEBUG</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 控制台操作日志 -->
    <root level="INFO">
        <appender-ref ref="console" />
    </root>

    <!-- 系统操作日志 -->
    <root level="INFO">
        <appender-ref ref="file_info" />
        <appender-ref ref="file_error" />
        <appender-ref ref="file_warn" />
        <appender-ref ref="file_debug" />
    </root>

    <!-- 日志基本从高到到低： OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
    <!-- 系统日志级别控制 如果设置等级为 info 那么低于info的都不显示 -->
    <logger name="org.springframework" level="INFO" />
    <logger name="org.springframework.amqp.*" level="DEBUG" />
    <logger name="org.springframework.scheduling.*" level="DEBUG" />
    <logger name="java.sql.Connection" level="DEBUG" />
    <logger name="java.sql.Statement" level="DEBUG" />
    <logger name="java.sql.PreparedStatement" level="DEBUG" />
    <logger name="io.lettuce.*" level="INFO" />
    <logger name="io.netty.*" level="ERROR" />
    <logger name="org.mybatis" level="DEBUG" />
    <logger name="com.rabbitmq.*" level="DEBUG" />
    <logger name="com.alibaba.nacos.client.naming" level="WARN" />
    <logger name="com.alibaba.cloud.nacos.refresh" level="DEBUG" />
    <!-- 系统模块日志级别控制  -->
    <logger name="com.tuoyingtao" level="INFO" />
    <logger name="com.tuoyingtao.main.dao" level="DEBUG" />
    <!--定义com.xxx.xx.xx包下的日志信息不上传，直接输出到file_debug和file_error这个两个appender中，日志级别为DEBUG-->
    <logger name="com.xxx.xxx.xx" additivity="false" level="DEBUG">
        <appender-ref ref="file_debug"/>
        <appender-ref ref="file_error"/>
    </logger>
</configuration>
